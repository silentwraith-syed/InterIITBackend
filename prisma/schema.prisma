generator client {
provider = "prisma-client-js"
}


datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
id String @id @default(cuid())
name String
email String @unique
password String
avatar String?
createdAt DateTime @default(now())
posts Post[]
comments Comment[]
upvotedComments CommentUpvote[]
}


model Post {
id String @id @default(cuid())
title String
body String
image String?
createdAt DateTime @default(now())
author User @relation(fields: [authorId], references: [id])
authorId String
comments Comment[]
}


model Comment {
id String @id @default(cuid())
text String
upvotes Int @default(0)
createdAt DateTime @default(now())
user User @relation(fields: [userId], references: [id])
userId String
post Post @relation(fields: [postId], references: [id])
postId String
parent Comment? @relation("CommentToComment", fields: [parentId], references: [id])
parentId String?
children Comment[] @relation("CommentToComment")
upvotedBy CommentUpvote[]
}

model CommentUpvote {
id String @id @default(cuid())
user User @relation(fields: [userId], references: [id])
userId String
comment Comment @relation(fields: [commentId], references: [id], onDelete: Cascade)
commentId String
createdAt DateTime @default(now())

@@unique([userId, commentId])
@@index([commentId])
@@index([userId])
}